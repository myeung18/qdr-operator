apiVersion: v1
kind: List
items:
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: qdr-resources
      namespace: operator-lifecycle-manager
    data:
      clusterServiceVersions: |
        - apiVersion: operators.coreos.com/v1alpha1
          kind: ClusterServiceVersion
          metadata:
            annotations:
              alm-examples: >-
                [{"apiVersion":"interconnectedcloud.github.io/v1alpha1","kind":"Qdr","metadata":{"name":"amq-interconnect"},"spec":{"deploymentPlan":{"size":2,"role":"interior","placement":"Any","image":"quay.io/interconnectedcloud/qdrouterd:1.6.0"}}}]
              capabilities: Basic Install
              categories: Messaging
            name: qdr-operator.v0.1.0
            namespace: placeholder
          spec:
            apiservicedefinitions: {}
            customresourcedefinitions:
              owned:
              - version: v1alpha1
                kind: Qdr
                description: An instance of Qdr
                displayName: Qdr
                name: qdrs.interconnectedcloud.github.io
                resources:
                - kind: Service
                  version: v1
                - kind: Deployment
                  version: v1
                - kind: ServiceAccount
                  version: v1
                - kind: qdrs
                  version: v1alpha1
                - kind: rolebindings
                  version: v1
                - kind: pods
                  version: v1
                - kind: configmaps
                  version: v1
                - kind: roles
                  version: v1
                - kind: routes
                  version: v1
                - kind: secrets
                  version: v1
                specDescriptors:
                - description: The role and placement plan for the qdr deployment
                  displayName: DeploymentPlan
                  path: deploymentPlan
                - description: Listeners for incoming connections to the router
                  displayName: Listeners
                  path: listeners
                - description: Listeners for inter router mesh connections
                  displayName: InterRouterListeners
                  path: interRouterListeners
                - description: Listeners for edge downlink connections
                  displayName: EdgeListeners
                  path: edgeListeners
                - description: TLS/SSL configuration for connections
                  displayName: SslProfiles
                  path: sslProfiles
                - description: Address configuration for distribution and phasing
                  displayName: Addresses
                  path: addresses
                - description: Auto links address configuration
                  displayName: AutLinks
                  path: autoLinks
                - description: Link routes address configuration
                  displayName: LinkRoutes
                  path: linkRoutes
                - description: Outbound client connections to AMQP 1.0 entity
                  displayName: Connectors
                  path: connectors
                - description: Outbound interior router connections for mesh operation
                  displayName: InterRouterConnectors
                  path: interRouterConnectors
                - description: Outbound edge router connections for edge uplink
                  displayName: EdgeConnectors
                  path: edgeConnectors
                statusDescriptors:
                - description: The current revision of the qdr cluster
                  displayName: Revision Number
                  path: revNumber
                - description: The current pods
                  displayName: Pods
                  path: pods
                - description: The current conditions
                  displayName: Conditions
                  path: conditions
            description: |
          
              An operator for managing Layer 7 (e.g. Application Layer) addressing and routing within and across [Kubernetes](https://kubernetes.io/) or
              [OpenShift](https://www.openshift.com/) clusters.
          
              This operator provides a `Qdr` [Custom Resource Definition](https://kubernetes.io/docs/tasks/access-kubernetes-api/extend-api-custom-resource-definitions/)
              (CRD) that describes a deployment of [Apache Qpid Dispatch Router](https://qpid.apache.org/components/dispatch-router/index.html) allowing developers to expertly
              deploy qdr routers for their infrastructure and middle-ware oriented  messaging requirements. The number of messaging routers, the deployment topology, address
              semantics and other desired options can be specified through the CRD.
          
              ### Introduction
              The qdr is a lightweight [AMQP 1.0](https://www.amqp.org/) message router for building high performance, large scale and highly resilient messaging networks
              for hybrid cloud and IoT/edge deployments. The qdr acts as a "bump in the wire" for the AMQP 1.0 protocol and transparently learns the addresses of messaging
              endpoints (e.g. target subscribers) in order to flexibly route messages between any AMQP 1.0 enabled endpoints including clients, servers and
              messaging brokers.
          
              ### Core Capabilities
          
              The qdr provides the following core capabilities:
          
              * High throughput, low latency, shortest path  message forwarding based on layer 7 address routing mechanisms
          
              * `Interior` mode deployments for any arbitrary topology of geographically distributed and interconnected qdrs
          
              * `Edge` mode deployments for extremely large scale device endpoint connectivity
          
              * Automatic message traffic re-routing when network topology changes (e.g. resiliency without restrictions)
          
              * Flexible addressing schemes and delivery semantics (e.g. anycast, multicast, closest, balanced)
          
              * Integrated management with full support for the draft AMQP management specification
          
              * Full featured security capabilities for authentication, authorization and policy based resource access control
          
              ### Operator Features
          
              * **Manages the qdr Deployment** - Flexible Deployment Plans for `interior` and `edge` mode scenarios including all dependent resources
          
              * **Placement Directives** - Simplifies the deployment resource type and pod scheduling with deployment or daemon set and anti-affinity
          
              * **Connectivity Configuration Defaults** - Automatically generates configuration defaults for listeners, connectors and ssl setup
          
              * **Exposes the Service** - Integrated management of OpenShift Route resource for exposed listener services for client, inter-router and edge communications
          
              * **Manages Certificates** - Creates and manages certificates through integration with [jetstack cert-manager](https://github.com/jetstack/cert-manager)
          
              ### Troubleshooting
          
              Once you have created the qdr deployment, its operation can be checked to ensure it is working as expected.
          
              * Select the qdr instance to see details
          
              * Select the Deployment (or DaemonSet) instance to see details
          
              * Select an individual pod for the Deployment (or DaemonSet) to see the details
          
              * Select any Route created for exposed services to see the details
          
              * Execute a series of `qdstat` commands to verify setup and connectivity
          
            displayName: Qdr Operator
            install:
              spec:
                deployments:
                - name: qdr-operator
                  spec:
                    replicas: 1
                    selector:
                      matchLabels:
                        name: qdr-operator
                    template:
                      metadata:
                        labels:
                          name: qdr-operator
                      spec:
                        serviceAccountName: qdr-operator
                        containers:
                        - command:
                          - qdr-operator
                          env:
                          - name: WATCH_NAMESPACE
                            valueFrom:
                              fieldRef:
                                fieldPath: metadata.namespace
                          - name: POD_NAME
                            valueFrom:
                              fieldRef:
                                fieldPath: metadata.name
                          - name: OPERATOR_NAME
                            value: qdr-operator
                          image: quay.io/myeung/qdr-operator
                          imagePullPolicy: Always
                          name: qdr-operator
                          ports:
                          - containerPort: 60000
                            name: metrics
                          resources: {}
                permissions:
                - rules:
                  - apiGroups:
                    - ""
                    resources:
                    - pods
                    - services
                    - endpoints
                    - serviceaccounts
                    - persistentvolumeclaims
                    - events
                    - configmaps
                    - secrets
                    verbs:
                    - '*'
                  - apiGroups:
                    - "route.openshift.io"
                    resources:
                    - routes
                    - routes/custom-host
                    - routes/status
                    verbs:
                    - get
                    - list
                    - watch
                    - create
                    - delete
                  - apiGroups:
                    - rbac.authorization.k8s.io
                    resources:
                    - rolebindings
                    - roles
                    verbs:
                    - get
                    - list
                    - watch
                    - create
                    - delete
                  - apiGroups:
                    - ""
                    resources:
                    - namespaces
                    verbs:
                    - get
                  - apiGroups:
                    - apps
                    resources:
                    - deployments
                    - daemonsets
                    - replicasets
                    - statefulsets
                    verbs:
                    - '*'
                  - apiGroups:
                    - "certmanager.k8s.io"
                    resources:
                    - issuers
                    - certificates
                    verbs:
                    - get
                    - list
                    - watch
                    - create
                    - delete
                  - apiGroups:
                    - monitoring.coreos.com
                    resources:
                    - servicemonitors
                    verbs:
                    - get
                    - create
                  - apiGroups:
                    - interconnectedcloud.github.io
                    resources:
                    - '*'
                    verbs:
                    - '*'
                  serviceAccountName: qdr-operator
              strategy: deployment
            installModes:
            - supported: true
              type: OwnNamespace
            - supported: true
              type: SingleNamespace
            - supported: false
              type: MultiNamespace
            - supported: true
              type: AllNamespaces
            maturity: alpha
            provider: {}
            version: 0.1.0
      customResourceDefinitions: |
        - apiVersion: apiextensions.k8s.io/v1beta1
          kind: CustomResourceDefinition
          metadata:
            name: qdrs.interconnectedcloud.github.io
          spec:
            group: interconnectedcloud.github.io
            names:
              kind: Qdr
              listKind: QdrList
              plural: qdrs
              singular: qdr
            scope: Namespaced
            version: v1alpha1
            subresources:
              status: {}
            validation:
             # openAPIV3Schema is the schema for validating custom objects.
              openAPIV3Schema:
                required:
                  - spec
                properties:
                  spec:
                    properties:
                      deploymentPlan:
                        type: object
                        properties:
                          image:
                            type: string
                            description: The image used for the qdr deployment
                          size:
                            type: integer
                            minimum: 1
                            maximum: 16
                            description: The number of qdr pods to deploy
                          role:
                            description: The qdr deployment role
                            type: string
                            enum:
                              - edge
                              - interior
                          placement:
                            description: The qdr placement plan
                            type: string
                            enum:
                              - Any
                              - Every
                              - AntiAffinity
                              - Node
                          resources:
                            type: object
                            properties:
                              requests:
                                type: object
                                properties:
                                cpu:
                                  type: string
                                memory:
                                  type: string
                              limits:
                                type: object
                                properties:
                                cpu:
                                  type: string
                                memory:
                                  type: string
                          issuer:
                            type: string
                            description: The externally provided credentials
                      listeners:
                        type: array
                        description: Configuration of each individual qdr listener
                        minItems: 1
                        items:
                          type: object
                          description: qdr listener configuration
                          properties:
                            name:
                              type: string
                              description: Listener name
                            host:
                              type: string
                              description: Host name
                            port:
                              type: integer
                              description: Port number
                            routeContainer:
                              type: boolean
                              description: Indicator for a router-broker connection
                            http:
                              type: boolean
                              description: Accept HTTP connections
                            cost:
                              type: integer
                              description: Cost metric for inter router connections
                            sslProfile:
                              type: string
                              description: Name of the ssl profile to use
                            role:
                              type: boolean
                            expose:
                              type: boolean
                      autoLinks:
                        items:
                          properties:
                            address:
                              type: string
                            connection:
                              type: string
                            containerId:
                              type: string
                            direction:
                              type: string
                            externalPrefix:
                              type: string
                            phase:
                              format: int32
                              type: integer
                          required:
                            - address
                            - direction
                          type: object
                        type: array
                      connectors:
                        type: array
                        description: Configuration of each individual router connnector
                        items:
                          properties:
                            cost:
                              format: int32
                              type: integer
                            host:
                              type: string
                            name:
                              type: string
                            port:
                              format: int32
                              type: integer
                            routeContainer:
                              type: boolean
                            sslProfile:
                              type: string
                          required:
                            - host
                            - port
                          type: object
                        type: array
                      interRouterConnectors:
                        type: array
                        description: Configuration of each individual inter router connector
                        items:
                          properties:
                            cost:
                              format: int32
                              type: integer
                            host:
                              type: string
                            name:
                              type: string
                            port:
                              format: int32
                              type: integer
                            routeContainer:
                              type: boolean
                            sslProfile:
                              type: string
                          required:
                            - host
                            - port
                          type: object
                        type: array
                      edgeConnectors:
                        type: array
                        description: Configuration of each individual edge uplink connector
                        items:
                          properties:
                            cost:
                              format: int32
                              type: integer
                            host:
                              type: string
                            name:
                              type: string
                            port:
                              format: int32
                              type: integer
                            routeContainer:
                              type: boolean
                              description: Indicator for a router-broker connection
                            sslProfile:
                              type: string
                          required:
                            - host
                            - port
                          type: object
                        type: array
                      interRouterListeners:
                        type: array
                        description: Configuration of each individual inter router listener
                        items:
                          type: object
                          description: qdr listener configuration
                          properties:
                            name:
                              type: string
                              description: Listener name
                            host:
                              type: string
                              description: Host name
                            port:
                              type: integer
                              description: Port number
                            routeContainer:
                              type: boolean
                              description: Indicator for a router-broker connection
                            http:
                              type: boolean
                              description: Accept HTTP connections
                            cost:
                              type: integer
                              description: Cost metric for inter router connections
                            sslProfile:
                              type: string
                              description: Name of the ssl profile to use
                            expose:
                              type: boolean
                      edgeListeners:
                        type: array
                        description: Configuration of each individual inter edge listener
                        items:
                          type: object
                          description: qdr listener configuration
                          properties:
                            name:
                              type: string
                              description: Listener name
                            host:
                              type: string
                              description: Host name
                            port:
                              type: integer
                              description: Port number
                            routeContainer:
                              type: boolean
                              description: Indicator for a router-broker connection
                            http:
                              type: boolean
                              description: Accept HTTP connections
                            cost:
                              type: integer
                              description: Cost metric for inter router connections
                            sslProfile:
                              type: string
                              description: Name of the ssl profile to use
                            expose:
                              type: boolean
                      addresses:
                        type: array
                        description: Configuration of each address distribution and phasing
                        items:
                          type: object
                          description: address configuration
                          properties:
                            prefix:
                              type: string
                              description: The address prefix for the configured setting
                            pattern:
                              type: string
                              description: A wildcarded pattern for address matching
                            distribution:
                              type: string
                              description: Treatment of traffic associated with the address
                              enum:
                                - balanced
                                - closest
                                - multicast
                            waypoint:
                              type: boolean
                              description: Indicator for waypoint use
                            ingressPhase:
                              type: integer
                              minimum: 0
                              maximum: 9
                              description: Ingress phase override for the address
                            egressPhase:
                              type: integer
                              minimum: 0
                              maximum: 9
                              description: Egress phase override for the address
                            priority:
                              type: integer
                              minimum: 0
                              maximum: 9
                              description: Priority assigned to address for inter router transfer
                      sslProfiles:
                        items:
                          properties:
                            caCert:
                              type: string
                            ciphers:
                              type: string
                            credentials:
                              type: string
                            name:
                              type: string
                            protocols:
                              type: string
                            requireClientCerts:
                              type: boolean
                          type: object
                        type: array
                      linkRoutes:
                        items:
                          properties:
                            addExternalPrefix:
                              type: string
                            connection:
                              type: string
                            containerId:
                              type: string
                            direction:
                              type: string
                            pattern:
                              type: string
                            prefix:
                              type: string
                            removeExternalPrefix:
                              type: string
                          type: object
                        type: array
                      issuer:
                        type: string
                    type: object
                  status:
                    type: object
                    required:
                    - pods
                    - conditions
                    properties:
                      revNumber:
                        type: string
                      pods:
                        items:
                          type: string
                        type: array
                      phase:
                        type: string
                      conditions:
                        description: Conditions keeps most recent qdr conditions
                        items:
                          properties:
                            reason:
                              type: string
                            transitionTime:
                              format: date-time
                              type: object
                            type:
                              type: string
                          required:
                          - type
                          type: object
                        type: array
      packages: >
        - #! package-manifest: deploy/olm-catalog/qdr-operator/0.1.0/qdr-operator.v0.1.0.clusterserviceversion.yaml
          packageName: qdr-operator
          channels:
            - name: beta
              currentCSV: qdr-operator.v0.1.0

  - apiVersion: operators.coreos.com/v1alpha1
    kind: CatalogSource
    metadata:
      name: qdr-resources
      namespace: operator-lifecycle-manager
    spec:
      configMap: qdr-resources
      displayName: Qdr Operators
      publisher: Red Hat
      sourceType: internal
    status:
      configMapReference:
        name: qdr-resources
        namespace: operator-lifecycle-manager
